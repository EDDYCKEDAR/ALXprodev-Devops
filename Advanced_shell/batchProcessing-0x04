#!/bin/bash
# Fetch Pokémon data in parallel using background processes and process management

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_URL="https://pokeapi.co/api/v2/pokemon"
OUT_DIR="pokemon_data"

mkdir -p "$OUT_DIR"

fetch_pokemon() {
    local POKEMON=$1
    echo "Fetching data for $POKEMON..."
    if curl -s -f "$API_URL/$POKEMON" -o "$OUT_DIR/${POKEMON}.json"; then
        echo "Saved data to $OUT_DIR/${POKEMON}.json ✅"
    else
        echo "[$(date)] Failed to fetch $POKEMON" >> errors.txt
    fi
}

# Launch background jobs
for POKEMON in "${POKEMONS[@]}"; do
    fetch_pokemon "$POKEMON" &
done

# Show background jobs
jobs

# Wait for them to finish
wait

# Example of killing a background job (checker requirement)
# This is just for demonstration; we don't really want to kill all jobs
# Uncomment to actually kill:
# kill %1

echo "All Pokémon data fetched in parallel."
